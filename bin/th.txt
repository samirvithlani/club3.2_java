								DATA TYPE

Primitive Data type									Non Primitive Data type
																String
Non-numric			numric 										Array					
boolean    														etc
char		
			 Integer      Floting Point
			 byte          float
			 short 		   double	
			 int
			 long	
			 
			 
method: behaviour of class
	  : method is collection of statments
	  
	  static method   non static method
	  with return type with argument	
	  
----------------------------------------

oops:
encapulation
:class
	object
	constructors
	data hiding
		access and non access modifiers
		
	
		
inheritance
polymorphisam
abstraction



constructor: const is special functions which has same name as class name

use of constructor is to initise instance variable of class and object of class

type of const:

1)default const
2)pram const

const can have param but dont have return type
one class must have 1 constructor... if programmer will not const, compiler will do.. default const



access modifiers

private
default
protected
public


-----------
non access modifiers
static
final





const with inheritance

parent default

child default
parent dfault const ---> child dfault--->
------------

parent class param
child class / default / param -
then parent class const must invoke from child class const using super(pass required patam)

---
parent class param / default

then it is choice which const needs to call of parent class..

polymorephisam :
many form of the functions....

compile time poly.... early biniding,. | static binindg...
	method overloaing()
run time poly...  lazy binding  | dynaminc binding...
	method overriding...
	polymorephic object..
	
method overloading...
we will have same name of method in same class or parent class or child class but with diff param called method overloading...
Shape(){}
	

overriding:
child class have same method of parent class called overriding....
it should match signature

access modifiers
return type
method name
param

access modifiers can be change*
if parent class have default modi --> child class can make default,proected,public


abstraction :--

we can achive ; using 
abstract class and abstract method...
interface

abstract methods can be created inside abstract only...


String:

String is class : java.lang.String
----------------------------------

java String is immutable:

String name = "amit"

scp --> value "amit"
String nams1 = "amit" 



String constant pool





userDefine method :---> (string,char) -->hi this is india,i
									     i --> count




hi this is beautiful city,and city beautiful fountain;


error    : syntax problem: solve 
exception: developer logica, system .... handle

Error
Exception

							Throwable
	Error															Exception
																		child n...
																								
Type of exception:
run time exception | uncheck exception     :
compile time exception | checked exception :


for handle exception we have 2 ways
throws keyword
try catch and finally block.																								
										
										
java.io

2 type file classes

low level file class						high level file class
byte | stream 										char | line | word
													Reader,Writer 
InputStream										FileRead,FileWriter,					
OutputStream																								




realtive path:

	current folder abc   
			 ./image.txt
			 ../../image.txt 
			 ../../../image.txt		


abs path: 
d:royal/abc
d:royal/abc/image.txt















	  			 				